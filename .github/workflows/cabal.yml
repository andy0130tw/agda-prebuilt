name: Linux (cabal)

on:
  push:
    paths:
    - 'src/**'
    - '.github/workflows/cabal.yml'
  pull_request:
    paths:
    - 'src/**'
    - '.github/workflows/cabal.yml'

jobs:
  Ubuntu-x86_64:
    if: |
      !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[github skip]')
      && !contains(github.event.head_commit.message, '[skip github]')

    strategy:
      matrix:
        os:
        - ubuntu-20.04
        agda-ver:
        - 'v2.6.1.3'
        - 'v2.6.2.2'
        ghc-ver:
        - '9.0.2'
        - '8.10.7'
      fail-fast: false

    runs-on: ${{ matrix.os }}

    env:
      AGDA_SRC: './agda-src'
      AGDA_DIST: './dist'

    steps:
    - name: Setup environment
      run: |
        sudo apt update
        sudo apt install alex happy

    - uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc-ver }}
        cabal-version: '3.6.2'

    - uses: actions/checkout@v2.3.2
      with:
        repository: agda/agda
        ref: ${{ matrix.agda-ver }}
        path: ${{ env.AGDA_SRC }}
        submodules: recursive

    - name: Edit the cabal file
      working-directory: ${{ env.AGDA_SRC }}
      run: |
        sed -i '/^executable agda$/a\  ld-options: -static' Agda.cabal

    - name: Summarize the environment
      working-directory: ${{ env.AGDA_SRC }}
      run: |
        export AGDA_VERSION=$(cabal info . | head -n 1 | cut -d " " -f 2 | cut -d "-" -f 2)
        _GHC_STR=$(ghc --numeric-version)
        _CABAL_STR=$(cabal --numeric-version)
        _CACHE_KEY=$(echo "$_GHC_STR-$_CABAL_STR" | sed "s/[^a-z0-9]/_/gi")
        echo "AGDA_CACHE_KEY=$_CACHE_KEY" >> $GITHUB_ENV
        echo "*** GHC version ***"     && ghc --version
        echo "*** cabal version ***"   && cabal --version
        echo "*** Agda version ***"    && echo $AGDA_VERSION

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cabal
          ~/.ghc
        key: ${{ runner.os }}-cabal-${{ env.AGDA_CACHE_KEY }}-${{ hashFiles(format('{0}/Agda.cabal', env.AGDA_SRC)) }}-r2

    - name: Cache dists
      uses: actions/cache@v2
      with:
        path: ${{ format('{0}/dist*', env.AGDA_SRC) }}
        key: ${{ runner.os }}-cabal-${{ env.AGDA_CACHE_KEY }}-${{ hashFiles(format('{0}/Agda.cabal', env.AGDA_SRC)) }}-r2

    - name: Install dependencies
      working-directory: ${{ env.AGDA_SRC }}
      run: |
        cabal v1-install --only-dependencies

    - name: Configure Agda
      working-directory: ${{ env.AGDA_SRC }}
      run: |
        cabal v1-configure --prefix=/usr/local \
        --enable-tests \
        --disable-library-profiling \
        --disable-executable-dynamic \
        --disable-shared \
        --enable-library-stripping \
        --enable-executable-stripping \
        --ghc-options="-fPIC +RTS -M5G -RTS"

    - name: Build Agda
      working-directory: ${{ env.AGDA_SRC }}
      run: |
        cabal v1-build -j4

    - name: Pack artifacts
      working-directory: ${{ env.AGDA_SRC }}
      run: |
        DIST="$GITHUB_WORKSPACE/$AGDA_DIST"
        mkdir $DIST
        cp -r src/data/lib $DIST
        if [ -d "dist-newstyle" ]; then
          cp dist-newstyle/build/x86_64-*/ghc-*/*/*/*/agda $DIST
        else
          echo "*** Copying agda binary in the old-style dist folder ***"
          cp dist/build/agda/agda $DIST
        fi
        strip $DIST/agda

    - name: Test Agda (dummy)
      working-directory: ${{ env.AGDA_DIST }}
      run: |
        # TODO: test if the file is indeed static
        file ./agda

    - uses: actions/upload-artifact@v2
      with:
        name: agda-prebuilt-${{ matrix.agda-ver }}-ghc-${{ matrix.ghc-ver }}
        path: ${{ env.AGDA_DIST }}
