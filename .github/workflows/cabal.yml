name: Linux (cabal)

on:
  push:
    paths:
    - 'src/**'
    - '.github/workflows/cabal.yml'
  pull_request:
    paths:
    - 'src/**'
    - '.github/workflows/cabal.yml'

jobs:
  Ubuntu-x86_64:
    if: |
      !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[github skip]')
      && !contains(github.event.head_commit.message, '[skip github]')

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
        # - ubuntu-16.04
        - ubuntu-18.04
        # - ubuntu-20.04
        agda-ver:
        - 'v2.6.1'
        # - master

    steps:
    - name: Setup environment
      run: |
        sudo apt update
        sudo apt install ghc cabal-install

    - name: Update cabal
      run: cabal update

    - name: Checkout Agda repo
      uses: actions/checkout@v2.3.2
      with:
        repository: agda/agda
        ref: ${{ matrix.agda-ver }}
        path: './agda-src'

    - name: Summarize the environment
      working-directory: './agda-src'
      run: |
        export AGDA_VERSION=$(cabal info . | head -n 1 | cut -d " " -f 2 | cut -d "-" -f 2)
        _GHC_STR=$(ghc --version)
        _CABAL_STR=$(cabal --version)
        _CACHE_KEY=$(echo "$_GHC_STR-$_CABAL_STR" | sed "s/[^a-z0-9]/_/gi")
        echo ::set-env name=AGDA_CACHE_KEY::$_CACHE_KEY
        echo "*** GHC version ***"     && ghc --version
        echo "*** cabal version ***"   && cabal --version
        echo "*** Agda version ***"    && echo $AGDA_VERSION

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: "~/.cabal"
        key: ${{ runner.os }}-cabal-${{ env.AGDA_CACHE_KEY }}-${{ hashFiles('**/plan.json') }}


    - name: Edit the cabal file
      working-directory: './agda-src'
      run: |
        sed -i '/^executable agda$/a\  ld-options: -static' Agda.cabal

    - name: Install dependencies
      working-directory: './agda-src'
      run: |
        cabal install --only-dependencies

    - name: Configure Agda
      working-directory: './agda-src'
      run: |
        cabal configure --datadir=~/.agda-$AGDA_VERSION --disable-executable-dynamic --disable-shared --ghc-option=-optl=-fPIC

    - name: Build Agda
      working-directory: './agda-src'
      run: |
        cabal build

    - name: Test Agda (dummy)
      run: |
        # TODO: test if the file is indeed static

    - name: Produce Artifact
      run: |
        mkdir $GITHUB_WORKSPACE/agda-prebuilt
        pushd $HOME/.cabal/share/x86_64-*
        cp Agda* $GITHUB_WORKSPACE/agda-prebuilt
        popd
        cp agda-src/dist-newstyle/build/x86_64-*/ghc-*/*/*/*/agda $GITHUB_WORKSPACE/agda-prebuilt
        tar

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: agda-prebuilt
        path: agda-prebuilt/
